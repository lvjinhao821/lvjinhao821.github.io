<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>BIM信息分类编码制定思路</title>
      <link href="/2020/052733842.html"/>
      <url>/2020/052733842.html</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;本文详细讲解了BIM信息分类编码从概念—制定—应用的过程，侧重于讲解基本思路和方法，不足处在于没有对现有的分类编码体系进行分析。希望能帮到大家，我们一起学习共同进步！</p><hr><h3 id="首先我们要理解什么是信息分类编码！"><a href="#首先我们要理解什么是信息分类编码！" class="headerlink" title="首先我们要理解什么是信息分类编码！"></a><center>首先我们要理解什么是信息分类编码！</center></h3><p> &emsp;&emsp;不知道大家有没有这样一种行为，当我们说信息分类编码的时候，我们脑子里往往记成信息编码！容易忽略了“分类”这两字。其实正如其名字一样，信息分类和信息编码有着密切的关系，两者是相辅相成的。信息分类的方式决定了信息编码所采用的格式，我们将名字进一步拆解来理解每个词的含义：</p><p>​    &emsp;信息：工程项目一般涉及许多不同类别的专业，包含了大量的工程实体和信息。具体来说像文字、数字、图片、图纸、图像、声音等都可作为信息。当然如果按不同的视角来看，同一样“信息”可能会有不同的意义。以桥面板为例，设计人员可能关注于桥面板的性能和受力属性，而造价人员可能关注于桥面板混凝土和钢筋的用量。由此可见信息种类十分多样化且庞杂，因此我们要有针对性的来梳理我们需要的信息，我们得清楚编码的目的是为了解决什么问题，只有这样才不至于梳理信息时没有导向，导致最后产出的编码产生大量的数据冗余和信息断层的局面。</p><p>​    &emsp;分类：指在一定范围内，为了实现信息存储、调取、修改等一系列管理目标，根据信息内容的属性或者特征，按照一定的分类原则和方法，将实体基元和信息按特定的结构体系分门别类组织起来。</p><p>​    &emsp;编码：我们可以理解成，在计算机中用一些特定结构的符号来简化我们想表达的信息，借助计算机强大的存储、运算能力。方便信息的存储、检索和调用。而编码的目的就是在于为计算机中的数据与实际处理信息之间建立联系。反映在Revit中就表现为对象属性中包含其编码信息。</p><p>​    &emsp;信息分类编码是现代信息技术辅助工程建设管理的一项必要的组成部分，也是大家统一认识，统一观点和交换信息的一种手段。我们以BIM模型为例，如果项目各参与方都使用同一套分类编码为指导标准进行协同工作。这样才不会出现某个人做的东西只有他一个人才明白，当项目参与方需要信息时，也可直接依据该分类编码标准，这样对所得到的信息才不会有理解上的困难，有效的保障了信息的流动，是协同合作实现信息交换和资源共享的重要基础。</p><hr><div align='center' ><font size=5>其次该怎么样来制定信息分类编码！</font></div><h3 id="BIM信息模型编码制定大致分为三步："><a href="#BIM信息模型编码制定大致分为三步：" class="headerlink" title="BIM信息模型编码制定大致分为三步："></a>BIM信息模型编码制定大致分为三步：</h3><p>​    &emsp;首先(梳理信息) 对庞杂的工程资料和信息进行过滤梳理，还要将工程实体结构拆分成满足BIM应用需求的模型构件。</p><p>​    &emsp;然后(对”构件”先分类后编码)对拆分好的构件先按照相关规范进行分类，然后编码。</p><p>​    &emsp;最后(对”信息”先分类后编码)对分类好的信息按照一定规则进行编码。</p><p>​    &emsp;前面我们已经提到分类和编码所代表的含义，还说到制定信息分类编码的步骤，那下面我们依次来说关于信息梳理、分类、编码的相关思路和方法。</p><h4 id="梳理所需信息："><a href="#梳理所需信息：" class="headerlink" title="梳理所需信息："></a>梳理所需信息：</h4><p>&emsp;&emsp;不管是对工程实体的拆分还是相关信息的梳理，我们首先都要明确我们的目的是要做什么？想清楚哪些工作可以BIM化，哪些工作需要BIM化。为了实现该工作BIM化的目的，我们需要将工程实体拆分到什么程度，整个过程需要哪些必要信息，才能满足实际使用要求。明确其拆分边界后，可根据工程实体施工过程逐步细化分解将工程实体拆分成各个模型构件，且根据信息在各方流动传递的过程中将其进行梳理记录下来。整个梳理结果是后面分类和编码的底层基础，这个过程需要仔细且耐心。由于工程所涉及的内容很广泛，因此我们可以立足当前项目，学习和研究其相关专业的知识内容，完成其对BIM应用的需求。在之后的实践中再将其不断完善改进，以使得支持更多项目和新的BIM应用需求。</p><h4 id="分类方法："><a href="#分类方法：" class="headerlink" title="分类方法："></a>分类方法：</h4><p>&emsp;&emsp;信息分类的基本方法有两种：线分类法与面分类法。在实际使用中常将两种方法搭配在一起使用，我们常称为混合分类法。</p><p><strong>（1）线分类法：</strong>又名树状结构分类法，它将要分类的对象（被划分的事物或概念）按其所选择的若干个属性或特征，按最稳定本质属性逐次地分成相应的若干层类目，并排列成一个树状的逐级展开的分类体系，其上下层关系图如下所示。</p><p><img src="http://qaxevdow7.bkt.clouddn.com/bianma1.png" alt=""></p><p>在线分类法中要注意：</p><p>①  上一层要完全包含下一层，且不能出现与该次分类无关的其他元素。(图1)</p><p>②  不同类别里不能有重复项。(图2)</p><p><img src="http://qaxevdow7.bkt.clouddn.com/bianma2.png" alt=""></p><p>&emsp;&emsp;在线分类中，其结构层次性好，能较好的反应出上下层之间的逻辑关系。可是揭示事物多个特征的能力差，由于每次分类只能依据一种特征或属性，随着描述的特征的增加，编码数量就会急速增加(图2)，并且那个特点该排在更高层级也更难界定。</p><p><strong>（2）面分类法：</strong>面分类法是将所选定的分类对象的若干属性或特征视为“面”，每个“面”中又可分成彼此独立的若干个类目，排列成一个由若干个面构成的平行分类体系。使用时，根据需要将这些“面”中类目组合在一起，形成一个复合类目，其示意如下。</p><p><img src="http://qaxevdow7.bkt.clouddn.com/bianma3.png" alt=""></p><p>在面分类法中要注意：</p><p>①由于每个面之间要求互平行，则面与面之间依据的特征或属性不能出现隶属关系，否则会造成极大的空间资源浪费。（图1）</p><p>②“面”的选择以及位置的确定，应根据实际需要而定，且每个“面应该有严格的固定位置，否则大家按自己的想法进行排序组合，最终编码会异常混乱。(图2)</p><p><img src="http://qaxevdow7.bkt.clouddn.com/bianma4.png" alt=""></p><p> &emsp;&emsp;在面分类法中，其结构的适用性比较强，“面”内的增减不会影响其他的“面”，且当需要检索时可根据任意“面”的组合方式进行检索有利于计算机信息的处理。但不能充分利用编码空间，即使分类时特征属性之间不存在隶属关系，但有些面之间的类目相互组合是毫无意义的。</p><p><strong>（3）混合分类法：</strong>由于工程项目信息的复杂性，单独使用任何一种分类方法往往不能满足使用需要，因此在实际应用中，需考虑两者的优缺点，综合使用。比如目前在建筑行业中比较成熟的信息分类编码体系Omniclass,采用的就是面分法，共有15张分类表，每张表就是一个相对独立的分类体系，因此每张表就是依据面分类法划分的。然后每张表的内部采用线分法，这样既可以单独使用一个分类表，表达建设项目特定方面的信息，也可将不同的分类表组合使用以表达更为复杂的信息。其他建设项目也可参考Omniclass信息分类思路，根据本行业的具体情况搭配使用面分类法和线分类法。</p><hr><h4 id="编码方法"><a href="#编码方法" class="headerlink" title="编码方法:"></a>编码方法:</h4><p>&emsp;&emsp;文章开头我们说到信息分类的方式决定了信息编码所采用的格式，针对线分类法我们提出了‘层次码’的编码方式，针对面分类法我们提出了‘组合码’的编码方式。针对混合分类法所采用的编码体系我们称为‘复合码’的形式。下面我们依次讨论这3种编码。</p><p><strong>（1）层次码：</strong>能清楚表示分类对象的类别，代码本身有严格的隶属关系，同时各层代码在分类上具有一定的含义。此种代码结构简单，容量大，便于计算机求和汇总。但它的缺点是弹性差，当个别分类改变或删除时，就可能影响其它代码，当层次较多时，代码位数较长。</p><p>&emsp;&emsp;通常根据项目规模和应用要求可制定4~8级的编码级别，每级别用固定位数的数字或字母表示，不足位数需要用0补齐。级别之间用点分隔，并且为了满足编码唯一性需要，通常规定或增加最后一级的编码为序号码，但并非强制项，该序号码主要为了分辨编码级别相同的同种构件有多个。</p><p><img src="http://qaxevdow7.bkt.clouddn.com/bianma5.png" alt=""></p><p><img src="http://qaxevdow7.bkt.clouddn.com/bianma6.png" alt=""></p><p><strong>（2）组合码：</strong>由两个或两个以上完整的、独立的代码组成，使用范围较广。它可由数字、字母或系列符号（如文字）等复合而成。不同“面”的类目组合在一起时推荐采用“/”，“+”，“&lt;”，“&gt;”连接。对于单个面，表示多个类目用“/”连接。对于多个面，面与面之间的类目组合用“+”连接。“&gt;”和“&lt;”用法跟“+”一样，但侧重强调的是符号开口方向的一侧。</p><p><img src="http://qaxevdow7.bkt.clouddn.com/bianma7.png" alt=""></p><p><strong>（3）复合码：</strong>将上述层次码和组合码互相融合使用。除了结构构造有所不同外，其具有与层次码和组合码完全相同的性质和特点。虽然增加了编码的复杂性，但却可以处理线分类法无法解决的描述对象多重意义的问题。更能适应复杂的实际情况。</p><p>复合码的结构常可表示为，描述多种特征就通过“+/&gt;&lt;”连接，描述单个特征不同层级关系用“.”连接。可参见下图理解。</p><p><img src="http://qaxevdow7.bkt.clouddn.com/bianma8.png" alt=""></p><hr><h3 id="基于Revit将编制的分类编码用起来！"><a href="#基于Revit将编制的分类编码用起来！" class="headerlink" title="基于Revit将编制的分类编码用起来！"></a><center>基于Revit将编制的分类编码用起来！</center></h3><p>​    &emsp;现目前国内建筑行业作为BIM技术先行领域，其建筑分类编码的框架主要以ISO 12006-2为标准。现在建筑行业中比较成熟的信息分类编码体系为Ominiclass，前面我们也提到它有15张面分类表，在该文章里我们不讨论既有的标准体系。我们把重点移到Revit软件上，Revit软件在我国建筑业BIM体系中普及率是最高的，但软件自身只默认携带Omniclass标准其中的一张表，表号为23。其还支持英国的Uniclass标准。但对于我们很多应用管理需求，Revit自带的ID都无法进行对应。因此我们有必要建立适合于自身项目的分类编码体系以适应需求。</p><p>​        对于内置族和自建族，可以通过给各组件添加实例参数的方式设置其属性，属性值为各组件对应的编码值。对于Revit自带的系统族(墙、板、屋顶等)，是不支持设置实例或类型参数的，但我们可以用项目参数来代替，给系统族赋予属性，属性值也为各组件对应的编码值。这样就实现了编码与构件相互对应，从而达到模型有效组织和编码。</p><p>有两点需要注意一下：</p><p>①必须要求所有同类构件的参数名称要一致。这样才能保证在后期应用中，计算机通过类，可过滤出所有同类构建不会出现遗漏。</p><p>②必须至少要有一个实例属性，否则无法区分相同构件不同数量的情况。</p><p><img src="http://qaxevdow7.bkt.clouddn.com/bianma9.png" alt=""></p><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><center>总结</center></h3><p>&emsp;&emsp;要做编码，就得现有分类。如何分类就成了首要问题。因此要明白要解决什么事，然后分析解决这件事，哪些信息是有用的，先把需要的信息筛出来。然后根据一些特征进行合理分类。然后用数字和字符来表达这些信息，最终可借助信息化平台实现对信息的高效管理。</p>]]></content>
      
      
      <categories>
          
          <category> BIM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BIM </tag>
            
            <tag> 信息编码 </tag>
            
            <tag> 土木工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单介绍下我自己</title>
      <link href="/2020/052637773.html"/>
      <url>/2020/052637773.html</url>
      
        <content type="html"><![CDATA[<p>我是一名大三，土木工程道路桥梁专业的学生，想给大家简单介绍一下我自己，谈谈自己对未来打算。</p><p>先说下到目前取得的成果吧。</p><p>&emsp;奖项:</p><ul><li>2019年“星光杯”大学生BIM设计挑战赛 市政组 第三名</li><li>“优路杯”全国BIM技术大赛 综合组 铜奖</li><li>“斯维尔”杯BIM技能大赛 校赛一等奖</li><li>BIM建模大赛 校赛一等奖</li><li>全国大学生数学建模竞赛 四川省二等奖</li></ul><p>&emsp;证书：</p><ul><li>全国BIM等级考试二级 BIM高级建模师</li><li>全国BIM等级考试一级 BIM建模师</li><li>全国计算机等级考试二级（Access）证</li></ul><p>&emsp;&emsp;我一直觉得，自己是一个普通得不能再普通的人，唯一的闪光点，是自己大学时期懂得了要坚持不断地学习。我高中很叛逆，成绩一直都不好，高考是我考试最好的一次，但也只是勉强上了个民办二本。高考结束后，我对大学生活是非常憧憬的，想着自己即将迎来一个全新的阶段一定要努力上进。事实我也是这么做的。</p><ul><li>大一上学期；课余时间非常充足，除了学生会和社团活动以外的时间，我基本都泡在了图书馆，但当时不知道做什么，就仅仅只是抱着教材看，偶尔看点鸡汤书。</li><li>大一下学期 — 至今；我了解到了BIM对于行业来说是一种新的设计和管理技术，是未来的发展方向。当时我就觉得，自己一定要学好，于是投入了大量的时间去学习。这期间参加了很多BIM类比赛和实践，也掌握了很多软件，能够解决常见的BIM应用，对BIM也有了更深的认识。</li></ul><p>&emsp;&emsp;毕业就从事BIM工作，可能身边人都这么想吧。可是现在我犹豫了，经过这两年对行业工作的了解，我发现自己并不喜欢未来将要从事的工作内容和工作环境。现在大三下期也即将结束，我还是决心0基础转学IT，毕业争取从事前端开发的工作。</p><p>&emsp;&emsp;还是说下我为什么有转IT的念头？以及为什么选择前端开发？BIM是土木和计算机融合的领域，通过这两年的学习，发现自己对信息技术有着浓厚的兴趣。大三的寒假回到家，自己就开始学习编程。前一个月我学习的内容是python和计算机核心课程，当时python基础学完以后，我就想着先做一个博客。因为后面不管学习那个方向，个人博客都可以作为一个分享知识、记录总结和交友的平台。于是我开始学习python的web开发框架（Flask），以此为中心，逐渐了解并去学习了HTML、CSS、JavaScript等，开始了我的web学习之旅。通过知乎、B站、培训网站和招聘网站等渠道，了解到了web前端开发的学习路线以及经典书籍后，自己的学习方向也更加明确了，剩下的就要靠自己不断地努力学习。今后的目标大体分为两步走，第一步；达到前端开发人员应有的水平。第二步；掌握更多的后端开发知识。希望自己能够从“用”BIM产品，成长为“做”BIM产品。</p><p>&emsp;&emsp;很高兴你能点进这篇文章，倘若你也对BIM或前端开发有着强烈的兴趣，很希望能和你交个朋友，多分享、多交流。学习的路上有你，我们必将更有效率和动力。 共勉 </p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>friends</title>
      <link href="/friends/index.html"/>
      <url>/friends/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
